{
	"metadata": {
		"type": "App"
	},
	"project": {
		"shadows": true,
		"editable": true,
		"vr": false
	},
	"camera": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "C2075AF4-A784-48A2-A4BA-4B7DCA4F7E59",
			"type": "PerspectiveCamera",
			"name": "Camera",
			"matrix": [0.6761735677719116,2.2732354887367023e-10,-0.736742377281189,0,-0.1492779701948166,0.9792576432228088,-0.13700558245182037,0,0.7214605808258057,0.20261895656585693,0.662148118019104,0,21.633352279663086,6.075629711151123,19.854839324951172,1],
			"fov": 50,
			"zoom": 1,
			"near": 1,
			"far": 10000,
			"focus": 10,
			"aspect": 1.8528735632183908,
			"filmGauge": 35,
			"filmOffset": 0
		}
	},
	"scene": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "BCC3A53B-07C6-4FC3-B308-8F4A3E94469D",
			"type": "Scene",
			"name": "Scene",
			"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
		}
	},
	"scripts": {
		"BCC3A53B-07C6-4FC3-B308-8F4A3E94469D": [
			{
				"name": "index.js",
				"source": "debugMode = true;\n\n/*\n\n//\tsocketcluster loader.js\n\n(function(){\n\n\tvar selector = 'script[src=\"/socketcluster.js\"]';\n\tif ( document.querySelectorAll(selector).length == 0) {\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tloadScript( \"/sc-codec-min-bin.js\" );\n\t\t\tdebugMode && console.log(\"script \" + script.src + \" loaded!\");\n\t\t}; script.src = url;\n\t\tdocument.body.appendChild(script); \n\t}\n\n})();\n\n//\tjQuery loader.js\n\n(function(){\n\n\tvar selector = 'script[src=\"/js/jquery.min.js\"]';\n\tif ( document.querySelectorAll(selector).length == 0) {\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tloadScript( \"/js/jquery-ui.js\" );\n\t\t\tloadScript( \"/js/jquery.Jcrop.js\" );\n\t\t\tloadScript( \"/js/bootbox.min.js\" );\n\t\t\tloadScript( \"/js/bootstrap.min.js\" );\n\t\t\tdebugMode && console.log(\"script \" + script.src + \" loaded!\");\n\t\t}; script.src = url;\n\t\tdocument.body.appendChild(script); \n\t}\n\n})();\n\n//\tscripts loader.js\n\nvar scripts = [\n\t\"/js/hammer.js\",\n\t\"/js/DeviceDetector.js\",\n];\n\nfor ( var i = 0; i < scripts.length; i++ ) {\n\tloadScript( scripts[i] );\n}\n\nfunction loadScript(url){\n\tvar selector = 'script[src=\"' + url + '\"]';\n\tif ( document.querySelectorAll(selector).length == 0) {\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tdebugMode && console.log(\"script \" + script.src + \" loaded!\");\n\t\t}; script.src = url;\n\t\tdocument.body.appendChild(script); \n\t}\n}\n\n//  editor controls.js\n\n(function(){\n\n\tvar selector = 'script[src=\"/three/EditorControls.js\"]';\n\tif ( document.querySelectorAll(selector).length == 0) {\n\n\t//  Create a script DOM node.\n\t\tvar script = document.createElement(\"script\");  // local!\n\n\t//  Load EditorControls.js.\n\t\tscript.onload = function(){\n\t\t//  Create editor controls.\n\t\t\tcontrols = new THREE.EditorControls(camera);\n\t\t}; script.src = \"/three/EditorControls.js\";\n\n\t//  Add script to the end of the body.\n\t\tdocument.body.appendChild(script); \n\n\t} else {\n\n\t\tcontrols = new THREE.EditorControls(camera);\n\n\t}\n\n})();\n\n\n//\tscene.js\n\nclock = new THREE.Clock();\nmouse = new THREE.Vector2();\n\nfontFolder = \"/three/fonts/\";\nfontPath = \"/three/fonts/helvetiker_regular.typeface.json\";\n\nfunction init(){\n\n\tscene.name = \"EDITOR SCENE\";\n\tscene.fog = new THREE.FogExp2(0xb1c8e8, 0.0005);\n\n//  Background.\n\n\tsceneBackground([\n\t\t\"https://i.imgur.com/v6bjQLb.jpg\", // \"posx.jpg\",\n\t\t\"https://i.imgur.com/lwrlr6P.jpg\", // \"negx.jpg\", \n\t\t\"https://i.imgur.com/kKUKBJg.jpg\", // \"posy.jpg\", \n\t\t\"https://i.imgur.com/N0oZlJR.jpg\", // \"negy.jpg\", \n\t\t\"https://i.imgur.com/x9q8z0K.jpg\", // \"posz.jpg\", \n\t\t\"https://i.imgur.com/HYcK7Ii.jpg\", // \"negz.jpg\"\n\t]);\n\n//  Shadow Light.\n\n\tsunLight = new THREE.DirectionalLight( 0xdfebff, 0.75 );\n\tsunLight.position.set( 0, 500, 300 );\n\tsunLight.position.multiplyScalar( 1.5 );\n\tsunLight.castShadow = true;\n\tsunLight.shadow.mapSize.width  = Math.pow(2, 10); // 2048;\n\tsunLight.shadow.mapSize.height = Math.pow(2, 10); // 2048;\n\n\tvar d = 30;\n\tsunLight.shadow.camera.left = - d;\n\tsunLight.shadow.camera.right = d;\n\tsunLight.shadow.camera.top = d;\n\tsunLight.shadow.camera.bottom = - d;\n\tsunLight.shadow.camera.far = 10000;\n\n\tshadowHelper = new THREE.CameraHelper(sunLight.shadow.camera);\n\tshadowHelper.visible = false;\n\n\tscene.add( sunLight, shadowHelper  );\n\n//  Renderer.\n\n    renderer.gammaInput = true;\n    renderer.gammaOutput = true;\n\n}\n\nfunction update( event ) {}\n\nfunction sceneBackground( urls ){\n\tif (!scene || Number(THREE.REVISION) < 78) return;\n\tvar loader = new THREE.CubeTextureLoader();\n\tloader.load( urls, function(texture){\n\t\tscene.background = texture;\n\t\tscene.background.needsUpdate = true;\n\t});\n}\n*/"
			},
			{
				"name": "socketcluster.js",
				"source": "//\tsocketcluster loader.js\n\n/*\nvar loader = new THREE.XHRLoader();\nloader.load(\"/socketcluster.js\", function(text){\n\t//\tvar data = \"(function(){\" + text + \"})();\";\n\tvar blob = new Blob([text], {type:\"application/javascript\"});\n\tvar objectURL = URL.createObjectURL(blob);\n\t//\tdebugMode && console.log(objectURL);\n\tvar script = document.createElement(\"script\");\n\tscript.onload = function(){\n\n\t\tloadScript( \"/sc-codec-min-bin.js\" );\n\n\t\tURL.revokeObjectURL(objectURL);\n\t\tdocument.body.removeChild(script);\n\t\tdebugMode && console.log(\"socketcluster loaded!\");\n\n\t}; script.src = objectURL;\n\tdocument.body.appendChild(script); \n});\n\n\nfunction loadScript(url){\n\tvar loader = new THREE.XHRLoader();\n\tloader.load(url, function(text){\n\t//\tvar data = \"(function(){\" + text + \"})();\";\n\t\tvar blob = new Blob([text], {type:\"application/javascript\"});\n\t\tvar objectURL = URL.createObjectURL(blob);\n\t//\tdebugMode && console.log(objectURL);\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tURL.revokeObjectURL(objectURL);\n\t\t\tdocument.body.removeChild(script);\n\t\t\tdebugMode && console.log( url + \" loaded!\");\n\t\t}; script.src = objectURL;\n\t\tdocument.body.appendChild(script); \n\t});\n}\n*/\n\n\n\n\n/*\n(function(){\n\n\tvar selector = 'script[src=\"/socketcluster.js\"]';\n\tif ( document.querySelectorAll(selector).length == 0) {\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tloadScript( \"/sc-codec-min-bin.js\" );\n\t\t\tdebugMode && console.log(\"script \" + script.src + \" loaded!\");\n\t\t}; script.src = \"/socketcluster.js\";\n\t\tdocument.body.appendChild(script); \n\t}\n\n})();\n\nfunction loadScript(url){\n\tvar selector = 'script[src=\"' + url + '\"]';\n\tif ( document.querySelectorAll(selector).length == 0) {\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tdebugMode && console.log(\"script \" + script.src + \" loaded!\");\n\t\t}; script.src = url;\n\t\tdocument.body.appendChild(script); \n\t}\n}\n*/"
			},
			{
				"name": "jquery.js",
				"source": "//\tjQuery loader.js\n/*\nvar loader = new THREE.XHRLoader();\nloader.load(\"/js/jquery.min.js\", function(text){\n\t//\tvar data = \"(function(){\" + text + \"})();\";\n\tvar blob = new Blob([text], {type:\"application/javascript\"});\n\tvar objectURL = URL.createObjectURL(blob);\n\tvar script = document.createElement(\"script\");\n\tscript.onload = function(){\n\n\t\tloadScript( \"/js/jquery-ui.js\" );\n\t\tloadScript( \"/js/jquery.Jcrop.js\" );\n\t\tloadScript( \"/js/bootbox.min.js\" );\n\t\tloadScript( \"/js/bootstrap.min.js\" );\n\n\t\tURL.revokeObjectURL(objectURL);\n\t\tdocument.body.removeChild(script);\n\t\tdebugMode && console.log(\"jquery loaded!\");\n\n\t}; script.src = objectURL;\n\tdocument.body.appendChild(script); \n});\n\n\nfunction loadScript(url){\n\tvar loader = new THREE.XHRLoader();\n\tloader.load(url, function(text){\n\t//\tvar data = \"(function(){\" + text + \"})();\";\n\t\tvar blob = new Blob([text], {type:\"application/javascript\"});\n\t\tvar objectURL = URL.createObjectURL(blob);\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tURL.revokeObjectURL(objectURL);\n\t\t\tdocument.body.removeChild(script);\n\t\t\tdebugMode && console.log( url + \" loaded!\");\n\t\t}; script.src = objectURL;\n\t\tdocument.body.appendChild(script); \n\t});\n}\n*/\n/*\n(function(){\n\n\tvar selector = 'script[src=\"/js/jquery.min.js\"]';\n\tif ( document.querySelectorAll(selector).length == 0) {\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tloadScript( \"/js/jquery-ui.js\" );\n\t\t\tloadScript( \"/js/jquery.Jcrop.js\" );\n\t\t\tloadScript( \"/js/bootbox.min.js\" );\n\t\t\tloadScript( \"/js/bootstrap.min.js\" );\n\t\t\tdebugMode && console.log(\"script \" + script.src + \" loaded!\");\n\t\t}; script.src = \"/js/jquery.min.js\";\n\t\tdocument.body.appendChild(script); \n\t}\n\n})();\n*/\n\n/*\nfunction loadScript(url){\n\tvar selector = 'script[src=\"' + url + '\"]';\n\tif ( document.querySelectorAll(selector).length == 0) {\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tdebugMode && console.log(\"script \" + script.src + \" loaded!\");\n\t\t}; script.src = url;\n\t\tdocument.body.appendChild(script); \n\t}\n}\n*/\n\n/*\n//  bootbox.js\n\n\tvar msg = '<div class=\"text-center\">'\n\t+ '<span style=\"width:300px;font-weight:bold;'\n\t+ 'color:#fff;\">Loading...</span></div>';\n\n\tif ( window.bootbox ) {\n\n\t\t//  Loading bar.\n\t\tvar dialog = window.bootbox.dialog({\n\t\t\tmessage: msg,\n\t\t\tbuttons: false,\n\t\t\tcloseButton: false,\n\t\t\tclassName: \"middle\",\n\t\t});\n\n\t\t$( dialog.modal() ).find(\".modal-content\").css({\n\t\t\t\"border\"    : \"none\",\n\t\t\t\"box-shadow\": \"none\",\n\t\t\t\"background\": \"none\",\n\t\t});\n\n\t} else {\n\n\t\tvar loader = new THREE.XHRLoader();\n\t\tloader.load( \"/js/bootbox.min.js\", function(text){\n\t\t\tvar blob = new Blob([text], {type:\"application/javascript\"});\n\t\t\tvar objectURL = URL.createObjectURL(blob);\n\t\t\tvar script = document.createElement(\"script\");\n\t\t\tscript.onload = function(){\n\n\t\t\t\t//  Loading bar.\n\t\t\t\tvar dialog = window.bootbox.dialog({\n\t\t\t\t\tmessage: msg,\n\t\t\t\t\tbuttons: false,\n\t\t\t\t\tcloseButton: false,\n\t\t\t\t\tclassName: \"middle\",\n\t\t\t\t});\n\n\t\t\t\t$( dialog.modal() ).find(\".modal-content\").css({\n\t\t\t\t\t\"border\"    : \"none\",\n\t\t\t\t\t\"box-shadow\": \"none\",\n\t\t\t\t\t\"background\": \"none\",\n\t\t\t\t});\n\n\t\t\t\tURL.revokeObjectURL(objectURL);\n\t\t\t\tdocument.body.removeChild(script);\n\t\t\t\tdebugMode && console.log(\"bootbox.min.js loaded!\");\n\n\t\t\t}; script.src = objectURL;\n\t\t\tdocument.body.appendChild(script); \n\n\t\t});\n\n\t}\n*/"
			},
			{
				"name": "scripts loader.js",
				"source": "//\tscripts loader.js\n\nvar scripts = [\n\t\"/js/w3.js\",\n\t\"/js/hammer.js\",\n\t\"/js/store2.js\",\n\t\"/js/alerts.js\",\n\t\"/js/Objectid.js\",\n\t\"/js/spectrum.js\",\n\t\"/js/watermark.js\",\n\t\"/js/validator.js\",\n\t\"/js/rawinflate.js\",\n\t\"/js/rawdeflate.js\",\n\t\"/js/photoswipe.js\",\n\t\"/js/side-panels.js\",\n\t\"/js/MathDecimalAdjustment.js\",\n\t\"/js/photoswipe-ui-default.js\",\n];\n\n//\t\"/js/zangodb.min.js\",\n//\t\"/js/system.min.js\",\n//\t\"/js/signals.min.js\",\n//\t\"/js/command.js\",\n//\t\"/js/DeviceDetector.js\",\n\nfor ( var i = 0; i < scripts.length; i++ ) {\n\tloadScript( scripts[i] );\n}\n\nfunction loadScript(url){\n\tvar loader = new THREE.XHRLoader();\n\tloader.load(url, function(text){\n\t//\tvar data = \"(function(){\" + text + \"})();\";\n\t\tvar blob = new Blob([text], {type:\"application/javascript\"});\n\t\tvar objectURL = URL.createObjectURL(blob);\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tURL.revokeObjectURL(objectURL);\n\t\t\tdocument.body.removeChild(script);\n\t\t\tdebugMode && console.log( url + \" loaded!\");\n\t\t}; script.src = objectURL;\n\t\tdocument.body.appendChild(script); \n\t});\n}\n\n\n\n/*\nfunction loadScript(url){\n\tvar selector = 'script[src=\"' + url + '\"]';\n\tif ( document.querySelectorAll(selector).length == 0) {\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\tdebugMode && console.log(\"script \" + script.src + \" loaded!\");\n\t\t}; script.src = url;\n\t\tdocument.body.appendChild(script); \n\t}\n}\n*/\n\n/*\nfunction loadScript(url){\n\treturn new Promise(function(resolve, reject){\n\t\tvar selector = 'script[src=\"' + url + '\"]';\n\t\tif ( document.querySelectorAll(selector).length == 0) {\n\t\t\tvar script = document.createElement(\"script\");\n\t\t\tscript.onload = function(){\n\t\t\t\tresolve(script);\n\t\t\t\tdebugMode && console.log(\"script \" + script.src + \" loaded!\");\n\t\t\t}; script.src = url;\n\t\t\tdocument.body.appendChild(script); \n\t\t}\n\t});\n}\n*/\n"
			},
			{
				"name": "editor controls.js",
				"source": "//  editor controls.js\n\nif ( !THREE.EditorControls ) {\n\n\tvar loader = new THREE.XHRLoader();\n\tloader.load(\"/three/EditorControls.js\", function(text){\n\t//\tvar data = \"(function(){\" + text + \"})();\";\n\t\tvar blob = new Blob([text], {type:\"application/javascript\"});\n\t\tvar objectURL = URL.createObjectURL(blob);\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\n\t\t\tcontrols = new THREE.EditorControls(camera); // important!\n\n\t\t\tURL.revokeObjectURL(objectURL);\n\t\t\tdocument.body.removeChild(script);\n\t\t\tdebugMode && console.log(\"EditorControls.js loaded!\");\n\n\t\t}; script.src = objectURL;\n\t\tdocument.body.appendChild(script); \n\t});\n\n} else {\n\n\tcontrols = new THREE.EditorControls(camera);\n\n}\n\n/*\nfunction loadScript(url){\n\tvar loader = new THREE.XHRLoader();\n\tloader.load(url, function(text){\n\t\tvar data = \"(function(){\" + text + \"})();\";\n\t\tvar blob = new Blob([data], {type:\"application/javascript\"});\n\t\tvar objectURL = URL.createObjectURL(blob);\n\t\tdebugMode && console.log(objectURL);\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.onload = function(){\n\t\t\t$(script).remove();\n\t\t\tURL.revokeObjectURL(objectURL);\n\t\t\tdebugMode && console.log(\"script \" + url + \" loaded!\");\n\t\t}; script.src = objectURL;\n\t\tdocument.body.appendChild(script); \n\t});\n}\n*/"
			},
			{
				"name": "AW3D.db.js",
				"source": "//\tAW3D.db.js\n\nvar loader = new THREE.XHRLoader();\n\nloader.load(\"/js/zangodb.min.js\", function(text){\n//\tvar data = \"(function(){\" + text + \"})();\";\n\tvar blob = new Blob([text], {type:\"application/javascript\"});\n\tvar objectURL = URL.createObjectURL(blob);\n\tvar script = document.createElement(\"script\");\n\tscript.onload = function(){\n\n\t\tconst version = 1;\n\t\tconst name = \"AW3D\";\n\n\t\tAW3Ddb = new zango.Db( name, version, {\n\n\t\t\tmale:       true,\n\t\t\tfemale:     true,\n\t\t\tskeleton:   true,\n\t\t\tmaterials:  true,\n\t\t\ttextures:   true,\n\t\t\tanimations: true,\n\n\t\t});\n\n\t\tAW3Ddb.open(function(err, database){\n\t\t\tif (err) console.error(err);\n\t\t}).then( function(){\n\t\t\tdebugMode && console.log( \n\t\t\t\t\"Database \" + AW3Ddb.name \n\t\t\t\t+ \" (v\" + AW3Ddb.version \n\t\t\t\t+ \") ready for use.\"\n\t\t\t);\n\t\t}).catch(function(err){\n\t\t\tconsole.error(err);\n\t\t});\n\n        URL.revokeObjectURL(objectURL);\n\t\tdocument.body.removeChild(script);\n\t\tdebugMode && console.log(\"zangodb loaded!\");\n\n\t}; script.src = objectURL;\n\tdocument.body.appendChild(script); \n\n});\n\n\n//  export database.js\n\nexportAW3DCollection = function ( name ){\n\n//  throws error if collection not exist!\n    if ( !AW3Ddb.collection( name ) ) {\n\t\tthrow \"Collection \" + name + \" does not exist.\"; // important!\n\t}\n\n    AW3Ddb.collection(name).find()\n    .toArray(function(err, docs){\n        if (err) throw err;\n        if ( !docs.length )  \n            throw \"collection \" + name + \" is empty\";\n    }).then(function(docs){ \n        return JSON.stringify(docs);\n    }).then(function(data){ \n        debugMode && console.log( data );\n\n    //  Save to desktop.\n        var a = document.createElement(\"a\");\n        var file = new Blob([data], {type: \"text/json\"});\n        a.href = URL.createObjectURL(file);\n        a.download = name + \"-\" + AW3Ddb.name + \"v\" + AW3Ddb.version + \".json\";\n        a.click();\n\n        return a.href; // OK.\n\n    }).then(function(objectURL){\n        URL.revokeObjectURL(objectURL); // OK.\n\n    }).catch(function(err){\n        console.error(err);\n    });\n\n}\n\nexportDatabase = function (db){\n\n\tif ( !db._open ) {\n\t\tthrow \"Database \" + db.name + \" is not open.\";\n\t}\n\n\tvar json = {};\n\tvar promises = [];\n\n\tfor ( var name in db._cols ){\n\t\tpromises.push( (function(name){\n\t\t\treturn db.collection(name).find()\n\t\t\t.toArray(function(err, docs){\n\t\t\t\tif (err) throw err;\n\t\t\t}).then(function(docs){ \n\t\t\t\tif ( !docs.length ) console.warn( \"None documents found in collection \"+name);\n\t\t\t\tjson[ name ] = docs ;\n\t\t\t\tdebugMode && console.log( name+\":\", json[name] );\n\t\t\t}).catch(function(err){\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t})(name));\n\t}\n\n\tdebugMode && console.log( promises );\n\t\n\tPromise.all(promises).then(function(){\n\t\tdebugMode && console.log( \"json:\", json );\n\n        return JSON.stringify( json );\n\n    }).then(function(data){\n        debugMode && console.log(data);\n\n    //  Save to file.\n        var a = document.createElement(\"a\");\n        var file = new Blob([data], {type: \"text/json\"});\n        a.href = URL.createObjectURL(file);\n        a.download = db.name + \"v\" + db.version + \"-export.json\";\n        a.click();\n\n        return a.href;\n\n    }).then(function(objectURL){\n\n        URL.revokeObjectURL(objectURL);\n\n    }).catch(function(err){\n        console.error(err);\n    });\n\n}\n"
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			},
			{
				"name": "scene.js",
				"source": "//\tscene.js\n\nclock = new THREE.Clock();\nmouse = new THREE.Vector2();\n\nfontFolder = \"/three/fonts/\";\nfontPath = \"/three/fonts/helvetiker_regular.typeface.json\";\n\nfunction init(){\n\n\tscene.name = \"EDITOR SCENE\";\n\tscene.fog = new THREE.FogExp2(0xb1c8e8, 0.0005);\n\n//  Background.\n\n\tsceneBackground([\n\t\t\"https://i.imgur.com/v6bjQLb.jpg\", // \"posx.jpg\",\n\t\t\"https://i.imgur.com/lwrlr6P.jpg\", // \"negx.jpg\", \n\t\t\"https://i.imgur.com/kKUKBJg.jpg\", // \"posy.jpg\", \n\t\t\"https://i.imgur.com/N0oZlJR.jpg\", // \"negy.jpg\", \n\t\t\"https://i.imgur.com/x9q8z0K.jpg\", // \"posz.jpg\", \n\t\t\"https://i.imgur.com/HYcK7Ii.jpg\", // \"negz.jpg\"\n\t]);\n\n//  Shadow Light.\n\n\tsunLight = new THREE.DirectionalLight( 0xdfebff, 0.75 );\n\tsunLight.position.set( 0, 500, 300 );\n\tsunLight.position.multiplyScalar( 1.5 );\n\tsunLight.castShadow = true;\n\tsunLight.shadow.mapSize.width  = Math.pow(2, 10); // 2048;\n\tsunLight.shadow.mapSize.height = Math.pow(2, 10); // 2048;\n\n\tvar d = 30;\n\tsunLight.shadow.camera.left = - d;\n\tsunLight.shadow.camera.right = d;\n\tsunLight.shadow.camera.top = d;\n\tsunLight.shadow.camera.bottom = - d;\n\tsunLight.shadow.camera.far = 10000;\n\n\tshadowHelper = new THREE.CameraHelper(sunLight.shadow.camera);\n\tshadowHelper.visible = false;\n\n\tscene.add( sunLight, shadowHelper  );\n\n//  Renderer.\n\n    renderer.gammaInput = true;\n    renderer.gammaOutput = true;\n\n}\n\nfunction update( event ) {}\n\nfunction sceneBackground( urls ){\n\tif (!scene || Number(THREE.REVISION) < 78) return;\n\tvar loader = new THREE.CubeTextureLoader();\n\tloader.load( urls, function(texture){\n\t\tscene.background = texture;\n\t\tscene.background.needsUpdate = true;\n\t});\n}\n"
			}]
	}
}